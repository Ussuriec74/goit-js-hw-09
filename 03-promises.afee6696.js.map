{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAOA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MAdSO,SAASC,cAAc,SAE/BC,iBAAiB,UAgBzB,SAAuBC,GACrBA,EAAMC,iBACDD,EAAME,OAAOC,QAElB,MAAMC,EAAcC,SAASL,EAAMM,cAAcC,SAASC,OAAOC,OAC3DC,EAAYL,SAASL,EAAMM,cAAcC,SAASI,KAAKF,OAC7D,IAAIG,EAAaP,SAASL,EAAMM,cAAcC,SAASjB,MAAMmB,OAE7D,IAAK,IAAII,EAAI,EAAGA,GAAKT,EAAaS,GAAK,EACrCzB,EAAcyB,EAAGD,GACdE,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,UAE/D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,UAE/DsB,GAAcF,EAGhBV,EAAMM,cAAcc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formRef = document.querySelector(\".form\");\n\nformRef.addEventListener(\"submit\", onFormSubmit);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit (event) {\n  event.preventDefault();\n  if (!event.target.tagName === 'BUTTON') return;\n\n  const amountInput = parseInt(event.currentTarget.elements.amount.value);\n  const stepInput = parseInt(event.currentTarget.elements.step.value);\n  let delayInput = parseInt(event.currentTarget.elements.delay.value);\n\n  for (let i = 1; i <= amountInput; i += 1) {\n    createPromise(i, delayInput)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayInput += stepInput;\n  }\n\n  event.currentTarget.reset();\n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","target","tagName","amountInput","parseInt","currentTarget","elements","amount","value","stepInput","step","delayInput","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.afee6696.js.map"}